{
  "AuthServer": {
    "Authority": "http://localhost:53362" //配置认证地址
  },
  "AppSettings": {
    "Cap": {
      "UseCap": false, //是否启用cap,true是启用
      "UseCapCallBack": false //是否启用失败进行回调
    },
    "UseSwagger": true
  },
  //使用CAP时放开，并保证本地或服务器上正确安装了RabbitMq
  //"RabbitMQ": {
  //  "GroupName": "abp.baseservice",
  //  "Connections": {
  //    "Default": {
  //      "HostName": "127.0.0.1",
  //      "Port": "5672",
  //      "UserName": "test",
  //      "Password": "test"
  //    }
  //  },
  //  "HttpClientUrl": "http://localhost:9999/", //调用远端接口地址
  //  "SecretUser": "C5ABA9E202D94C43A3CA66002BF77FAF"
  //},
  "App": {
    "CorsOrigins": "http://localhost:9527,http://localhost:44307"
  },
  "ConnectionStrings": {
    "CAPConnect": "Server=localhost;Database=ABP;Trusted_Connection=True;TrustServerCertificate=True;", //CAP可以独立成一个数据库
    "Default": "Server=localhost;Database=ABP;Trusted_Connection=True;TrustServerCertificate=True;"
  },
  "ElasticSearch": {
    "Url": "http://localhost:9200"
  },
  "Redis": {
    "Configuration": "127.0.0.1"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  //配置Consul服务发现
  "ConsulRegistry": {
    "ServiceName": "baseService",
    "RegistryAddress": "http://localhost:8500",
    "HealthCheckAddress": "/HealthCheck"
  },
  //获取远端指定地址的token
  "GetIndentityToken": {
    "Default": {
      "AuthClientHttpUrl": "http://localhost:53362",
      "GrantType": "password",
      "ClientId": "basic-web",
      "Scope": "WebAppGateway BaseService BusinessService BaseData",
      "TenantName": ""
    }
  },
  "SwaggerUI": {//配置swagger分组等
    "RoutePrefix": "swagger",
    "ConfigObject": {
      "Urls": [
        {
          "Url": "/swagger/v1/swagger.json",
          "Name": "Supperted WebApi"
        },
        {
          "Url": "/swagger/base/swagger.json",
          "Name": "基础服务"
        }
      ],
      "DeepLinking": true,
      "DisplayOperationId": false,
      "DefaultModelsExpandDepth": -1,
      "DefaultModelExpandDepth": 99,
      "DefaultModelRendering": "example", //model
      "DocExpansion": "list", //none、full
      "Filter": "",
      "ShowExtensions": true
    }
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    // 日志输出级别
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        // 日志调用类命名空间如果以 Microsoft 开头，覆盖日志输出最小级别为 Information
        "Microsoft": "Warning",
        "Microsoft.Hosting": "Information",
        "System": "Warning",
        "Microsoft.Hosting.Lifetime": "Information"
      }
    },
    "WriteTo": [
      { "Name": "Console" },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/Error/error-.txt",
          "outputTemplate": "{NewLine}Date:{Timestamp:yyyy-MM-dd HH:mm:ss.fff}{NewLine}LogLevel:{Level}{NewLine}Class:{SourceContext}{NewLine}Message:{Message}{NewLine}{Exception}",
          "rollingInterval": "3",
          "RestrictedToMinimumLevel": "Error"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/Information/information-.txt",
          "outputTemplate": "{NewLine}Date:{Timestamp:yyyy-MM-dd HH:mm:ss.fff}{NewLine}LogLevel:{Level}{NewLine}Class:{SourceContext}{NewLine}Message:{Message}{NewLine}{Exception}",
          "rollingInterval": "3",
          "RestrictedToMinimumLevel": "Information"
        }
      }
    ]
  },
  "AllowedHosts": "*"
}
